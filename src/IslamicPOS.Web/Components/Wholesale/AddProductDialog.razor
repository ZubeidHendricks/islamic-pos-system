@using IslamicPOS.Core.Models.Wholesale
@inject IVendorService VendorService
@inject IQualityControlService QualityService

<MudDialog>
    <DialogContent>
        <MudContainer Style="max-height: 500px; overflow-y: auto; padding: 0;">
            <!-- Previous form content ... -->
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="!_isValid || _processing">
            @if (_processing)
            {
                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                <MudText Class="ms-2">Processing</MudText>
            }
            else
            {
                <MudText>Add Product</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public int VendorId { get; set; }
    [Parameter] public VendorScore VendorScore { get; set; } = null!;

    private MudForm _form = null!;
    private bool _isValid;
    private bool _processing;
    private VendorProduct _product = new();
    private string _certificationAuthority = "";

    protected override void OnInitialized()
    {
        _product.VendorId = VendorId;
        _product.AutoApproveOrders = VendorScore.QualifiesForAutoApproval;
    }

    private async Task Submit()
    {
        if (!_isValid) return;

        try
        {
            _processing = true;

            // Validate Halal certification if marked as Halal
            if (_product.IsHalal)
            {
                var isValid = await QualityService.ValidateHalalCompliance(_product);
                if (!isValid)
                {
                    Snackbar.Add("Invalid Halal certification", Severity.Error);
                    return;
                }
            }

            // Add product
            var result = await VendorService.AddProduct(_product);
            MudDialog.Close(DialogResult.Ok(result));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Error adding product: {ex.Message}", Severity.Error);
        }
        finally
        {
            _processing = false;
        }
    }

    private void Cancel() => MudDialog.Cancel();
}